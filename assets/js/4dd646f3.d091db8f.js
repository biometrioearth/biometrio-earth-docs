"use strict";(self.webpackChunkbiometrio_earth_docs=self.webpackChunkbiometrio_earth_docs||[]).push([[959],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(r),d=n,b=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return r?a.createElement(b,o(o({ref:t},p),{},{components:r})):a.createElement(b,o({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6955:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:6},o="Subqueries",l={unversionedId:"balam/balam-api/subqueries",id:"balam/balam-api/subqueries",title:"Subqueries",description:"In GraphQL, subqueries refer to the ability to nest multiple queries within a single query, allowing you to retrieve related data in a hierarchical structure. By nesting queries, you can request specific fields on related objects and retrieve all the required data in a more efficient and organized manner.",source:"@site/docs/balam/balam-api/subqueries.md",sourceDirName:"balam/balam-api",slug:"/balam/balam-api/subqueries",permalink:"/biometrio-earth-docs/docs/balam/balam-api/subqueries",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"balamSidebar",previous:{title:"Filter with related models",permalink:"/biometrio-earth-docs/docs/balam/balam-api/filter-related"},next:{title:"Mutations",permalink:"/biometrio-earth-docs/docs/category/mutations"}},s={},u=[],p={toc:u},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"subqueries"},"Subqueries"),(0,n.kt)("p",null,"In GraphQL, subqueries refer to the ability to nest multiple queries within a single query, allowing you to retrieve related data in a hierarchical structure. By nesting queries, you can request specific fields on related objects and retrieve all the required data in a more efficient and organized manner."),(0,n.kt)("p",null,"All the models in balam have at least one relation with another model, so you can subquery the related model when querying a model. Because the related objects can be many (in a ",(0,n.kt)("em",{parentName:"p"},"OneToMany")," or a ",(0,n.kt)("em",{parentName:"p"},"ManyToMany")," relation) it is needed that the subquery is paginated. So all subqueries in balam API have pagination and\nalso you can use the other useful arguments of the listing queries like ",(0,n.kt)("strong",{parentName:"p"},"sort")," and ",(0,n.kt)("strong",{parentName:"p"},"filter"),"."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Search argument is not included in the subqueries arguments. This is a special argument only present in\nque listing queries to make a quick search.")),(0,n.kt)("p",null,"You can use this arguments and pagination just the same as with the parent query:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  allProjects {\n    items {\n      shortname\n      siteSet(page: 2, pageSize:4) {\n        items {\n          identifier\n        }\n      }\n      samplingpointSet(filters: {\n        value: "11/10/2022 00:00:00",\n        field: date_deployment\n        operator: gt\n        valueType: DateTime\n      }) {\n        items {\n          id\n        }\n      }\n      \n    }\n  }\n}\n')),(0,n.kt)("p",null,"in the query above we change the pagination by setting the ",(0,n.kt)("em",{parentName:"p"},"pageSize")," to 4, so we will only get 4 sites per page, this for the subquery ",(0,n.kt)("inlineCode",{parentName:"p"},"siteSet")," which retrieve the sites related to the project. We also change the page to second one using the ",(0,n.kt)("em",{parentName:"p"},"page")," argument. In the other subquery example we use the ",(0,n.kt)("strong",{parentName:"p"},"filter")," argument to filter the list of related ",(0,n.kt)("em",{parentName:"p"},"Sampling Points")," by all values grater than the date ",(0,n.kt)("inlineCode",{parentName:"p"},"11/10/2022 00:00:00")," in the ",(0,n.kt)("inlineCode",{parentName:"p"},"date_deployment")," field. The complete list of arguments that you can use in a subquery are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"filters"),(0,n.kt)("li",{parentName:"ul"},"sort"),(0,n.kt)("li",{parentName:"ul"},"page"),(0,n.kt)("li",{parentName:"ul"},"pageSize")))}m.isMDXComponent=!0}}]);