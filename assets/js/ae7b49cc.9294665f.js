"use strict";(self.webpackChunkbiometrio_earth_docs=self.webpackChunkbiometrio_earth_docs||[]).push([[661],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,h=m["".concat(p,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6763:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1},o="Project",l={unversionedId:"balam/balam-backend/project-management/project",id:"balam/balam-backend/project-management/project",title:"Project",description:"The Project table holds basic information about the project like name, where is been carried out, a general description, etc. It has two special fields that are for internal use only: shortname and project_hash. This two fields aims to easily refer to the project from another tools and apps within biometrio.earth data managements teams.",source:"@site/docs/balam/balam-backend/project-management/project.md",sourceDirName:"balam/balam-backend/project-management",slug:"/balam/balam-backend/project-management/project",permalink:"/biometrio-earth-docs/docs/balam/balam-backend/project-management/project",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"balamSidebar",previous:{title:"Project Management",permalink:"/biometrio-earth-docs/docs/category/project-management"},next:{title:"Site",permalink:"/biometrio-earth-docs/docs/balam/balam-backend/project-management/site"}},p={},s=[{value:"Enums",id:"enums",level:2},{value:"Special fields",id:"special-fields",level:2}],c={toc:s},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"project"},"Project"),(0,r.kt)("p",null,"The Project table holds basic information about the project like name, where is been carried out, a general description, etc. It has two special fields that are for internal use only: shortname and project_hash. This two fields aims to easily refer to the project from another tools and apps within biometrio.earth data managements teams."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Used in search ",(0,r.kt)("a",{parentName:"th",href:"/biometrio-earth-docs/docs/balam/balam-api/search-and-filter#search"},"?")),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Observations"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"title"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Project's name"),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("span",{style:{borderBottom:"1px solid green"}},"Unique.")," ",(0,r.kt)("span",{style:{borderBottom:"1px solid green"}},"Required."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"shortname"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Project's shortname identifier"),(0,r.kt)("td",{parentName:"tr",align:"right"},"Its purpose is to easily identify the project from another app or service, can be an acronym of the title. ",(0,r.kt)("span",{style:{borderBottom:"1px solid green"}},"Unique.")," ",(0,r.kt)("span",{style:{borderBottom:"1px solid green"}},"Required."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"project_hash"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Project's hash serves as an additional identifier"),(0,r.kt)("td",{parentName:"tr",align:"right"},"It's created by Django when a new project is created or when updated the shortname. It's a md5 encryption of the shortname. ",(0,r.kt)("span",{style:{borderBottom:"1px solid green"}},"Unique.")," ",(0,r.kt)("span",{style:{borderBottom:"1px solid green"}},"Required."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"sequence_interval"),(0,r.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Sets the maximum number of seconds between timestamps of succesive media files."),(0,r.kt)("td",{parentName:"tr",align:"right"},"Optional")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"description"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Short description of the project"),(0,r.kt)("td",{parentName:"tr",align:"right"},"Optional")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"contacts"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Stores contact information in a string with a special format ",(0,r.kt)("inlineCode",{parentName:"td"},"name:phone:email")," with ",(0,r.kt)("inlineCode",{parentName:"td"},","),"  as a separator"),(0,r.kt)("td",{parentName:"tr",align:"right"},"Optional")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"duration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"The project entire duration"),(0,r.kt)("td",{parentName:"tr",align:"right"},"Can be 5 days, 1 year or undetermined. Optional")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"temporality"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Project temporality of each monitoring event"),(0,r.kt)("td",{parentName:"tr",align:"right"},"Can be 1 day, a few hours or up to 36 days. Optional")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"project_configuration"),(0,r.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Set the project to only have sampling points associated, or sites and sampling points or the more complex, sites, sampling areas and sampling points."),(0,r.kt)("td",{parentName:"tr",align:"right"},"Stored as an integer, 1 represents only sampling points, 2 represents sampling points with sites and 3 the more complex one. Default is stored with 1. ",(0,r.kt)("span",{style:{borderBottom:"1px solid green"}},"Required."))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"countries"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Country or countries where the project is carried out."),(0,r.kt)("td",{parentName:"tr",align:"right"},"Stored as a string with comma separated country codes. Can be left empty. Optional.")))),(0,r.kt)("p",null,"When creating or updating a project, the field country must be filled with a list of the anum values of the countries like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createProject(\n    title: "Test number 1",\n    shortname: "test1",\n    projectConfiguration: 2,\n    countries: [LU,AX,MX]\n  ) {\n    id\n    countries {\n      name\n    }\n  } \n}\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You must not include the ",(0,r.kt)("inlineCode",{parentName:"p"},"project_hash")," field when creating a project. This is automatically filled by Django using the shortname. ")),(0,r.kt)("h2",{id:"enums"},"Enums"),(0,r.kt)("p",null,"You can have the list of enum values for the countries with this query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  __type(name: "ProjectCountries") {\n    name\n    enumValues {\n      name\n      description\n    }\n  }\n}\n')),(0,r.kt)("p",null,"this returns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  "data": {\n    "__type": {\n      "name": "ProjectCountries",\n      "enumValues": [\n        {\n          "name": "AF",\n          "description": "Afghanistan"\n        },\n        {\n          "name": "AX",\n          "description": "\xc5land Islands"\n        },\n        {\n          "name": "AL",\n          "description": "Albania"\n        },\n        ...\n      ]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"and also the list of enum values for the project configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  __type(name: "ProjectmanagementProjectProjectConfigurationChoices") {\n    name\n    enumValues {\n      name\n      description\n    }\n  }\n}\n')),(0,r.kt)("p",null,"which returns: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  "data": {\n    "__type": {\n      "name": "ProjectmanagementProjectProjectConfigurationChoices",\n      "enumValues": [\n        {\n          "name": "A_1",\n          "description": "Only sampling points"\n        },\n        {\n          "name": "A_2",\n          "description": "Sampling points with sites"\n        },\n        {\n          "name": "A_3",\n          "description": "Sites, Sampling Areas and Sampling points"\n        }\n      ]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"the ",(0,r.kt)("inlineCode",{parentName:"p"},"A_")," prefix is attached by graphene due to collision issues, the actual value stored in the database doesn't have this prefix."),(0,r.kt)("h2",{id:"special-fields"},"Special fields"),(0,r.kt)("p",null,"When querying the country, in the ",(0,r.kt)("inlineCode",{parentName:"p"},"project")," query or in any other query that uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProjectType")," you can get more information:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  project(shortname: "test") {\n    countries {\n      name\n        code  \n            alpha3\n      numeric\n      iocCode\n    }\n  }\n}\n')),(0,r.kt)("p",null,"The fields of the countries object type refers to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," for the full country name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"code")," for the ISO 3166-1 two character country code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"alpha3")," for the ISO 3166-1 three character country code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"numeric")," for the ISO 3166-1 numeric country code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"iocCode")," for the International Olympic Committee country code")),(0,r.kt)("p",null,"Also, in ",(0,r.kt)("inlineCode",{parentName:"p"},"ProjectType")," you can do something similar with projectConfiguration, the fields available are"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," the actual value saved in the database"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"description")," the human-readable description of the project configuration.")),(0,r.kt)("p",null,"you can query that like this"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  project(shortname: "xprize_test_annotations") {\n    countries {\n      name\n      code\n      alpha3\n      numeric\n      iocCode\n    }\n    projectConfiguration {\n      value\n      description\n    }\n  }\n}\n')),(0,r.kt)("p",null,"which would respond"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n  "data": {\n    "project": {\n      "countries": [\n        {\n          "name": "Singapore",\n          "code": "SG",\n          "alpha3": "SGP",\n          "numeric": 702,\n          "iocCode": "SGP"\n        }\n      ],\n      "projectConfiguration": {\n        "value": 1,\n        "description": "Only sampling points"\n      }\n    }\n  }\n}\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"When using the ",(0,r.kt)("inlineCode",{parentName:"p"},"filters")," argument of the List queries with the ",(0,r.kt)("inlineCode",{parentName:"p"},"countries")," field, you should only use the ",(0,r.kt)("inlineCode",{parentName:"p"},"contains")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"notContains")," operators, to have a better response. That's because when we save more than one country, it is saved as a comma separated string.")))}d.isMDXComponent=!0}}]);